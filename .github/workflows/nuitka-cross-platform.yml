name: Nuitka Cross-Platform Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]  # 覆盖三大平台
        python-version: ["3.10"]  # 指定 Python 版本
        exclude:  # 排除特定组合（可选）
          - os: macos-latest
            python-version: "3.10"  # 例如 macOS 暂不支持 Python 3.12

    runs-on: ${{ matrix.os }}  # 动态选择操作系统

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nuitka
        pip install -r requirements.txt

    - name: Create output directory
      run: mkdir output

    - name: Compile with Nuitka
      shell: cmd  # Windows 默认用 cmd，Linux/macOS 自动切换为 bash
      run: |
        @echo "Compiling on ${{ runner.os }}..."
        @if "${{ runner.os }}" == "Windows" (
          python -m nuitka ^
            --standalone ^
            --show-progress ^
            --remove-output ^
            --lto=no ^
            --assume-yes-for-downloads ^
            --output-dir="./output" ^
            --plugin-enable=tk-inter ^
            --include-data-dir=".readme/ui-images=.readme/ui-images" ^
            "Roblox_Audio_Extractor.py"
        ) else (
          python -m nuitka \
            --standalone \
            --show-progress \
            --remove-output \
            --lto=no \
            --assume-yes-for-downloads \
            --output-dir="./output" \
            --plugin-enable=tk-inter \
            --include-data-dir=".readme/ui-images=.readme/ui-images" \
            "Roblox_Audio_Extractor.py"
        )

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Roblox-Audio-Extractor-${{ runner.os }}-Build
        path: output
