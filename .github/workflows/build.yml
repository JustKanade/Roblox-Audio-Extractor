name: Multi-Platform Build and Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }
          pip install pyinstaller
      - name: Build with PyInstaller
        run: |
          $buildDate = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
          $commitHash = git rev-parse HEAD
          $shortHash = git rev-parse --short HEAD
          
          echo "BUILD_DATE=$buildDate" >> $env:GITHUB_ENV
          echo "COMMIT_HASH=$commitHash" >> $env:GITHUB_ENV
          echo "SHORT_HASH=$shortHash" >> $env:GITHUB_ENV
          
          pyinstaller --onefile --windowed `
                      --icon=icons/Roblox-Audio-Extractor.ico `
                      --add-data="icons/*;icons" `
                      --name "Roblox_Audio_Extractor_win_$shortHash" `
                      Roblox_Audio_Extractor.py
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows-Build
          path: dist/*.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build with PyInstaller
        run: |
          buildDate=$(date +"%Y-%m-%d %H:%M:%S")
          commitHash=$(git rev-parse HEAD)
          shortHash=$(git rev-parse --short HEAD)
          
          echo "BUILD_DATE=$buildDate" >> $GITHUB_ENV
          echo "COMMIT_HASH=$commitHash" >> $GITHUB_ENV
          echo "SHORT_HASH=$shortHash" >> $GITHUB_ENV
          
          pyinstaller --onefile \
                      --add-data="icons/*:icons" \
                      --name "Roblox_Audio_Extractor_linux_$shortHash" \
                      Roblox_Audio_Extractor.py
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Linux-Build
          path: dist/*

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build with PyInstaller
        run: |
          buildDate=$(date +"%Y-%m-%d %H:%M:%S")
          commitHash=$(git rev-parse HEAD)
          shortHash=$(git rev-parse --short HEAD)
          
          echo "BUILD_DATE=$buildDate" >> $GITHUB_ENV
          echo "COMMIT_HASH=$commitHash" >> $GITHUB_ENV
          echo "SHORT_HASH=$shortHash" >> $GITHUB_ENV
          
          pyinstaller --onefile \
                      --add-data="icons/*:icons" \
                      --name "Roblox_Audio_Extractor_macos_$shortHash" \
                      Roblox_Audio_Extractor.py
      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macOS-Build
          path: dist/*

  create-release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: dev-${{ needs.build-windows.outputs.SHORT_HASH }}
          name: "Development Build (${{ needs.build-windows.outputs.BUILD_DATE }})"
          body: |
            Development preview build - Bugs may appear, if you are looking to just use the software, use the [latest stable release](https://github.com/JustKanade/Roblox-Audio-Extractor/releases/latest)
            
            **Commit:** ${{ needs.build-windows.outputs.COMMIT_HASH }}
            **Build date:** ${{ needs.build-windows.outputs.BUILD_DATE }}
            
            **Available builds:**
            - Windows: `Roblox_Audio_Extractor_win_${{ needs.build-windows.outputs.SHORT_HASH }}.exe`
            - Linux: `Roblox_Audio_Extractor_linux_${{ needs.build-windows.outputs.SHORT_HASH }}`
            - macOS: `Roblox_Audio_Extractor_macos_${{ needs.build-windows.outputs.SHORT_HASH }}`
          files: |
            artifacts/Windows-Build/*
            artifacts/Linux-Build/*
            artifacts/macOS-Build/*
          prerelease: true
          draft: false
