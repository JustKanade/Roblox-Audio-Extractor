name: Multi-Platform Build and Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }
          pip install pyinstaller
      - run: |
          $date=Get-Date -Format "yyyyMMdd"
          $hash=git rev-parse --short HEAD
          echo "TAG=v$date-$hash" >> $env:GITHUB_ENV
          pyinstaller --onefile --windowed --icon=icons/Roblox-Audio-Extractor.ico --add-data="icons/*;icons" --name Roblox_Audio_Extractor_win Roblox_Audio_Extractor.py
      - uses: actions/upload-artifact@v4
        with:
          name: Windows-Build
          path: dist/*.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - run: |
          pyinstaller --onefile --add-data="icons/*:icons" --name Roblox_Audio_Extractor_linux Roblox_Audio_Extractor.py
      - uses: actions/upload-artifact@v4
        with:
          name: Linux-Build
          path: dist/*

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - run: |
          pyinstaller --onefile --add-data="icons/*:icons" --name Roblox_Audio_Extractor_macos Roblox_Audio_Extractor.py
      - uses: actions/upload-artifact@v4
        with:
          name: macOS-Build
          path: dist/*

  create-release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: Development Build
          body: |
            Development preview build - Use [latest stable release](https://github.com/JustKanade/Roblox-Audio-Extractor/releases/latest) for production
            
            Commit: ${{ env.COMMIT_HASH }}
            Build date: ${{ env.BUILD_DATE }}
          files: artifacts/*
          prerelease: true
