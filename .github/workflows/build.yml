name: Auto Build and Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}
      build_date: ${{ steps.set-date.outputs.date }}
    steps:
      - uses: actions/checkout@v4
      - name: Set build date
        id: set-date
        run: |
          DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          echo "date=$DATE" >> $GITHUB_OUTPUT
      - name: Create release tag
        id: set-tag
        run: |
          SHORT_HASH=$(git rev-parse --short HEAD)
          echo "tag=dev-$(date +%Y%m%d%H%M)-$SHORT_HASH" >> $GITHUB_OUTPUT

  build-windows:
    needs: prepare
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'
          cache-dependency-path: '**/requirements.txt'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }
          pip install pyinstaller
      - name: Install UPX
        run: |
          $env:UPX_DIR = "$env:RUNNER_TEMP\upx"
          if (-not (Test-Path $env:UPX_DIR)) {
            New-Item -ItemType Directory -Path $env:UPX_DIR | Out-Null
            Invoke-WebRequest -Uri "https://github.com/upx/upx/releases/download/v4.0.2/upx-4.0.2-win64.zip" -OutFile "$env:UPX_DIR\upx.zip"
            Expand-Archive -Path "$env:UPX_DIR\upx.zip" -DestinationPath $env:UPX_DIR
          }
          $env:PATH = "$env:UPX_DIR\upx-4.0.2-win64;$env:PATH"
      - name: Build with PyInstaller (Windows)
        run: |
          pyinstaller --onefile --windowed `
            --icon=icons/Roblox-Audio-Extractor.ico `
            --add-data="icons/*;icons" `
            --upx-dir="$env:UPX_DIR\upx-4.0.2-win64" `
            --name Roblox_Audio_Extractor_${{ needs.prepare.outputs.tag }}_win `
            Roblox_Audio_Extractor.py
      - name: Compress executable
        run: |
          $exePath = Get-ChildItem -Path "dist" -Filter "*.exe" | Select-Object -First 1
          & "$env:UPX_DIR\upx-4.0.2-win64\upx.exe" --best --ultra-brute "$exePath"
      - uses: actions/upload-artifact@v4
        with:
          name: Windows-Build
          path: dist/*.exe
          compression-level: 9

  build-linux:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install UPX
        run: sudo apt-get update && sudo apt-get install -y upx
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'
          cache-dependency-path: '**/requirements.txt'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller
      - name: Build with PyInstaller (Linux)
        run: |
          pyinstaller --onefile \
            --add-data="icons/*:icons" \
            --upx-dir=/usr/bin \
            --name Roblox_Audio_Extractor_${{ needs.prepare.outputs.tag }}_linux \
            Roblox_Audio_Extractor.py
      - name: Compress executable
        run: |
          upx --best --ultra-brute dist/*
      - uses: actions/upload-artifact@v4
        with:
          name: Linux-Build
          path: dist/*
          compression-level: 9

  build-macos:
    needs: prepare
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install UPX
        run: brew install upx
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'
          cache-dependency-path: '**/requirements.txt'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller
      - name: Build with PyInstaller (macOS)
        run: |
          pyinstaller --onefile \
            --add-data="icons/*:icons" \
            --upx-dir=/usr/local/bin \
            --name Roblox_Audio_Extractor_${{ needs.prepare.outputs.tag }}_macos \
            Roblox_Audio_Extractor.py
      - name: Compress executable
        run: |
          upx --best --ultra-brute dist/*
      - uses: actions/upload-artifact@v4
        with:
          name: macOS-Build
          path: dist/*
          compression-level: 9

  release:
    needs: [prepare, build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create git tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag ${{ needs.prepare.outputs.tag }}
          git push origin ${{ needs.prepare.outputs.tag }}
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.prepare.outputs.tag }}
          name: "Development Build (${{ needs.prepare.outputs.build_date }})"
          body: |
            Development preview build - Bugs may appear, if you are looking to just use the software, use the [latest stable release](https://github.com/JustKanade/Roblox-Audio-Extractor/releases/latest)

            **Commit:** ${{ github.sha }}
            **Build date:** ${{ needs.prepare.outputs.build_date }}
          files: |
            artifacts/Windows-Build/*
            artifacts/Linux-Build/*
            artifacts/macOS-Build/*
          prerelease: true
          draft: false
